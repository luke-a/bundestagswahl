plot(cdu~date, data=latestpolls, type="n", ylim=ylimrange)
abline(h=seq(ylimrange[1], ylimrange[2]), col="lightgray", lty=3)
abline(h=seq(0, ylimrange[2], 5), col="lightgray", lty=1, lwd=2)
abline(h=5, col="gray", lty=1, lwd=2)
axis(side=2, at = 5, label = "5", col.axis = "black", las=3, cex.axis = 1, font = 2)
ylimrange <- c(min(as.matrix(latestpolls[,kuerzel]), na.rm=T), max(as.matrix(latestpolls[,kuerzel]), na.rm=T))
plot(cdu~date, data=latestpolls, type="n", ylim=ylimrange)
abline(h=seq(ylimrange[1], ylimrange[2]), col="lightgray", lty=3)
abline(h=seq(0, ylimrange[2], 5), col="lightgray", lty=1, lwd=2)
abline(h=5, col="gray", lty=1, lwd=2)
axis(side=2, at = 5, label = "5", col.axis = "black", las=3, cex.axis = 1, font = 2)
parteifarbe <- c(NA, NA, parteifarben)
for (x in 1:nrow(latestpolls))
for (y in 3:8)
points(x=latestpolls[x,1], y=latestpolls[x,y], pch=19, col=parteifarbe[y])
abline(h=stimmanteile, col=parteifarben)
ylimrange <- c(min(as.matrix(latestpolls[,kuerzel]), na.rm=T), max(as.matrix(latestpolls[,kuerzel]), na.rm=T))
plot(cdu~date, data=latestpolls, type="n", ylim=ylimrange)
abline(h=seq(ylimrange[1], ylimrange[2]), col="lightgray", lty=3, lwd=.8)
abline(h=seq(0, ylimrange[2], 5), col="lightgray", lty=1, lwd=1.5)
abline(h=5, col="gray", lty=1, lwd=1.5)
axis(side=2, at = 5, label = "5", col.axis = "black", las=3, cex.axis = 1, font = 2)
parteifarbe <- c(NA, NA, parteifarben)
for (x in 1:nrow(latestpolls))
for (y in 3:8)
points(x=latestpolls[x,1], y=latestpolls[x,y], pch=19, col=parteifarbe[y])
abline(h=stimmanteile, col=parteifarben)
ylimrange <- c(min(as.matrix(latestpolls[,kuerzel]), na.rm=T), max(as.matrix(latestpolls[,kuerzel]), na.rm=T))
plot(cdu~date, data=latestpolls, type="n", ylim=ylimrange)
abline(h=seq(ylimrange[1], ylimrange[2]), col="lightgray", lty=3, lwd=.8)
abline(h=seq(0, ylimrange[2], 5), col="lightgray", lty=1, lwd=1.5)
# abline(h=5, col="gray", lty=1, lwd=1.5)
axis(side=2, at = 5, label = "5", col.axis = "black", las=3, cex.axis = 1, font = 2)
parteifarbe <- c(NA, NA, parteifarben)
for (x in 1:nrow(latestpolls))
for (y in 3:8)
points(x=latestpolls[x,1], y=latestpolls[x,y], pch=19, col=parteifarbe[y])
abline(h=stimmanteile, col=parteifarben)
axis(side=2, at = 5, label = "5", col.axis = "black", las=3, cex.axis = 1, font = 2, lwd=2)
polygon(x=c(rep(min(latestpolls$date),2),rep(max(latestpolls$date),2)), y=c(0,5,5,0))
usr <- par("usr")
usr
polygon(x=c(rep(usr[1],2),rep(usr[2],2)), y=c(0,5,5,0))
polygon(x=c(rep(usr[1],2),rep(usr[2],2)), y=c(usr[3],5,5,usr[3]), border=NULL, density=20)
polygon(x=c(rep(usr[1],2),rep(usr[2],2)), y=c(usr[3],5,5,usr[3]), border=NULL, density=20, col="lightgray")
polygon(x=c(rep(usr[1],2),rep(usr[2],2)), y=c(usr[3],5,5,usr[3]), border=NULL, density=20, col="gray")
ylimrange <- c(min(as.matrix(latestpolls[,kuerzel]), na.rm=T), max(as.matrix(latestpolls[,kuerzel]), na.rm=T))
plot(cdu~date, data=latestpolls, type="n", ylim=ylimrange)
usr <- par("usr")
polygon(x=c(rep(usr[1],2),rep(usr[2],2)), y=c(usr[3],5,5,usr[3]), border=NULL, density=20, col="gray")
abline(h=seq(ylimrange[1], ylimrange[2]), col="lightgray", lty=3, lwd=.8)
abline(h=seq(0, ylimrange[2], 5), col="lightgray", lty=1, lwd=1.5)
axis(side=2, at = 5, label = "5", col.axis = "black", las=3, cex.axis = 1, font = 2, lwd=2)
parteifarbe <- c(NA, NA, parteifarben)
for (x in 1:nrow(latestpolls))
for (y in 3:8)
points(x=latestpolls[x,1], y=latestpolls[x,y], pch=19, col=parteifarbe[y])
abline(h=stimmanteile, col=parteifarben)
axis(1)
axis(2)
box()
ylimrange <- c(min(as.matrix(latestpolls[,kuerzel]), na.rm=T), max(as.matrix(latestpolls[,kuerzel]), na.rm=T))
plot(cdu~date, data=latestpolls, type="n", ylim=ylimrange)
usr <- par("usr")
polygon(x=c(rep(usr[1],2),rep(usr[2],2)), y=c(usr[3],5,5,usr[3]), border=NULL, density=20, col="gray")
abline(h=seq(ylimrange[1], ylimrange[2]), col="lightgray", lty=3, lwd=.8)
abline(h=seq(0, ylimrange[2], 5), col="lightgray", lty=1, lwd=1.5)
axis(side=2, at = 5, label = "5", col.axis = "black", las=3, cex.axis = 1, font = 2, lwd=2)
# axis(1)
# axis(2)
box()
parteifarbe <- c(NA, NA, parteifarben)
for (x in 1:nrow(latestpolls))
for (y in 3:8)
points(x=latestpolls[x,1], y=latestpolls[x,y], pch=19, col=parteifarbe[y])
abline(h=stimmanteile, col=parteifarben)
polygon(x=c(rep(usr[1],2),rep(usr[2],2)), y=c(usr[3],5,5,usr[3]), border=NULL, fill="gray")
ylimrange <- c(min(as.matrix(latestpolls[,kuerzel]), na.rm=T), max(as.matrix(latestpolls[,kuerzel]), na.rm=T))
plot(cdu~date, data=latestpolls, type="n", ylim=ylimrange)
usr <- par("usr")
polygon(x=c(rep(usr[1],2),rep(usr[2],2)), y=c(usr[3],5,5,usr[3]), border=NULL, col="gray")
abline(h=seq(ylimrange[1], ylimrange[2]), col="lightgray", lty=3, lwd=.8)
abline(h=seq(0, ylimrange[2], 5), col="lightgray", lty=1, lwd=1.5)
axis(side=2, at = 5, label = "5", col.axis = "black", las=3, cex.axis = 1, font = 2, lwd=2)
# axis(1)
# axis(2)
box()
parteifarbe <- c(NA, NA, parteifarben)
for (x in 1:nrow(latestpolls))
for (y in 3:8)
points(x=latestpolls[x,1], y=latestpolls[x,y], pch=19, col=parteifarbe[y])
abline(h=stimmanteile, col=parteifarben)
plot(cdu~date, data=latestpolls, type="n", ylim=ylimrange, xlab="Zeit", ylab="Prognosen", main="Wahlprognosen (Punkte) und Ergebnis der Bundestagswahl 2013 (Linien)")
plot(cdu~date, data=latestpolls, type="n", ylim=ylimrange, xlab="Zeit", ylab="Prognosen", main="Prognosen (Punkte) + Ergebnis d. Bundestagswahl (Linien)")
ylimrange <- c(min(as.matrix(latestpolls[,kuerzel]), na.rm=T), max(as.matrix(latestpolls[,kuerzel]), na.rm=T))
plot(cdu~date, data=latestpolls, type="n", ylim=ylimrange, xlab="Zeit", ylab="Prognosen", main="Prognosen (Punkte) + Ergebnis d. Bundestagswahl (Linien)")
usr <- par("usr"); polygon(x=c(rep(usr[1],2),rep(usr[2],2)), y=c(usr[3],5,5,usr[3]), border=NULL, col="gray") # "basement" < 5% hurdle
abline(h=seq(ylimrange[1], ylimrange[2]), col="lightgray", lty=3, lwd=.8) # minor-y-guides
abline(h=seq(0, ylimrange[2], 5), col="lightgray", lty=1, lwd=1.5) # mayjor-y-guides
axis(side=2, at = 5, label = "5", col.axis = "black", las=3, cex.axis = 1, font = 2, lwd=2) # annotate 5% hurdle
box() # redraw to put it on top
parteifarbe <- c(NA, NA, parteifarben)
for (x in 1:nrow(latestpolls))
for (y in 3:8)
points(x=latestpolls[x,1], y=latestpolls[x,y], pch=19, col=parteifarbe[y])
abline(h=stimmanteile, col=parteifarben)
stimmanteile <- c(cdu=34.1+7.4, spd=25.7, gru=8.4, fdp=4.8, lin=8.6, pir=2.2)
stimmanteile
latestpolls
schätzfehler <- 1.96 * sqrt(latestpolls[,kuerzel] * (1-latestpolls[,kuerzel]) / latestpolls$befragte)
apply(latestpolls, 1, function(x) 1.96* sqrt(x[1:7]*(1-x[1:7]) / x[8])
apply(latestpolls, 1, function(x) 1.96* sqrt(x[1:7]*(1-x[1:7]) / x[8]))
apply(latestpolls, 1, function(x) 1.96*sqrt(x[3:9]*(1-x[3:9]) / x[8]))
apply(latestpolls, 1, function(x) 1.96*sqrt(x[3:9]*(1-x[3:9]) / x[10]))
1.96*sqrt(latestpolls[1,3:9]*(1-latestpolls[1,3:9]) / latestpolls[1,10])
latestpolls[1,10]
latestpolls[1,3:9]
1.96*sqrt(latestpolls[1,3:9]/100*(1-latestpolls[1,3:9]/100) / latestpolls[1,10])
1.96*sqrt(latestpolls[1,3:9]/100*(1-latestpolls[1,3:9]/100) / latestpolls[1,10])*100
schätzfehler <- apply(latestpolls, 1, function(x) 1.96*sqrt(latestpolls[1,3:9]/100*(1-latestpolls[1,3:9]/100) / latestpolls[1,10])*100)
schätzfehler
kuerzel <- c("cdu", "spd", "gru", "fdp", "lin", "pir", "son")
parteifarben <- c(cdu="#000000", spd="#D71F1D", gru="#0A8000", fdp="#FFDD00", lin="#BE3075", pir="#FF8800")
stimmanteile <- c(cdu.csu=34.1+7.4, spd=25.7, gru=8.4, fdp=4.8, lin=8.6, pir=2.2)
schätzfehler <- apply(latestpolls, 1, function(x) 1.96*sqrt(latestpolls[1,3:9]/100*(1-latestpolls[1,3:9]/100) / latestpolls[1,10])*100)
ylimrange <- c(min(as.matrix(latestpolls[,kuerzel]), na.rm=T), max(as.matrix(latestpolls[,kuerzel]), na.rm=T))
plot(cdu~date, data=latestpolls, type="n", ylim=ylimrange, xlab="Zeit", ylab="Prognosen", main="Prognosen (Punkte) + Ergebnis d. Bundestagswahl (Linien)")
usr <- par("usr"); polygon(x=c(rep(usr[1],2),rep(usr[2],2)), y=c(usr[3],5,5,usr[3]), border=NULL, col="gray") # "basement" < 5% hurdle
abline(h=seq(ylimrange[1], ylimrange[2]), col="lightgray", lty=3, lwd=.8) # minor-y-guides
abline(h=seq(0, ylimrange[2], 5), col="lightgray", lty=1, lwd=1.5) # mayjor-y-guides
axis(side=2, at = 5, label = "5", col.axis = "black", las=3, cex.axis = 1, font = 2, lwd=2) # annotate 5% hurdle
box() # redraw to put it on top
parteifarbe <- c(NA, NA, parteifarben)
for (x in 1:nrow(latestpolls))
for (y in 3:8) {
points(x=latestpolls[x,1], y=latestpolls[x,y], pch=19, col=parteifarbe[y])
segments(x0=latestpolls[x,1],
y0=latestpolls[x,y]+schätzfehler[x,y-2],
y1=latestpolls[x,y]-schätzfehler[x,y-2], col=parteifarbe[y])
}
abline(h=stimmanteile, col=parteifarben)
schätzfehler
class(schätzfehler)
unlist(schätzfehler)
rbind(schätzfehler)
schätzfehler
do.call(rbind, lapply(schätzfehler, as.data.frame))
schätzfehler <- do.call(rbind, lapply(schätzfehler, as.data.frame))
kuerzel <- c("cdu", "spd", "gru", "fdp", "lin", "pir", "son")
parteifarben <- c(cdu="#000000", spd="#D71F1D", gru="#0A8000", fdp="#FFDD00", lin="#BE3075", pir="#FF8800")
stimmanteile <- c(cdu.csu=34.1+7.4, spd=25.7, gru=8.4, fdp=4.8, lin=8.6, pir=2.2)
schätzfehler <- apply(latestpolls, 1, function(x) 1.96*sqrt(latestpolls[1,3:9]/100*(1-latestpolls[1,3:9]/100) / latestpolls[1,10])*100)
schätzfehler <- do.call(rbind, lapply(schätzfehler, as.data.frame))
ylimrange <- c(min(as.matrix(latestpolls[,kuerzel]), na.rm=T), max(as.matrix(latestpolls[,kuerzel]), na.rm=T))
plot(cdu~date, data=latestpolls, type="n", ylim=ylimrange, xlab="Zeit", ylab="Prognosen", main="Prognosen (Punkte) + Ergebnis d. Bundestagswahl (Linien)")
usr <- par("usr"); polygon(x=c(rep(usr[1],2),rep(usr[2],2)), y=c(usr[3],5,5,usr[3]), border=NULL, col="gray") # "basement" < 5% hurdle
abline(h=seq(ylimrange[1], ylimrange[2]), col="lightgray", lty=3, lwd=.8) # minor-y-guides
abline(h=seq(0, ylimrange[2], 5), col="lightgray", lty=1, lwd=1.5) # mayjor-y-guides
axis(side=2, at = 5, label = "5", col.axis = "black", las=3, cex.axis = 1, font = 2, lwd=2) # annotate 5% hurdle
box() # redraw to put it on top
parteifarbe <- c(NA, NA, parteifarben)
for (x in 1:nrow(latestpolls))
for (y in 3:8) {
points(x=latestpolls[x,1], y=latestpolls[x,y], pch=19, col=parteifarbe[y])
segments(x0=latestpolls[x,1],
y0=latestpolls[x,y]+schätzfehler[x,y-2],
y1=latestpolls[x,y]-schätzfehler[x,y-2], col=parteifarbe[y])
}
abline(h=stimmanteile, col=parteifarben)
x <- stats::runif(12); y <- stats::rnorm(12)
i <- order(x, y); x <- x[i]; y <- y[i]
plot(x,y, main = "arrows(.) and segments(.)")
## draw arrows from point to point :
s <- seq(length(x)-1)  # one shorter than data
arrows(x[s], y[s], x[s+1], y[s+1], col = 1:3)
s <- s[-length(s)]
segments(x[s], y[s], x[s+2], y[s+2], col = "pink")
x <- stats::runif(12); y <- stats::rnorm(12)
i <- order(x, y); x <- x[i]; y <- y[i]
plot(x, y, main = "arrows(.) and segments(.)")
## draw arrows from point to point :
s <- seq(length(x)-1)  # one shorter than data
arrows(x[s], y[s], x[s+1], y[s+1], col= 1:3)
s <- s[-length(s)]
segments(x[s], y[s], x[s+2], y[s+2], col= 'pink')
x <- stats::runif(12); y <- stats::rnorm(12)
i <- order(x, y); x <- x[i]; y <- y[i]
plot(x, y, main = "arrows(.) and segments(.)")
ylimrange <- c(min(as.matrix(latestpolls[,kuerzel]), na.rm=T), max(as.matrix(latestpolls[,kuerzel]), na.rm=T))
plot(cdu~date, data=latestpolls, type="n", ylim=ylimrange, xlab="Zeit", ylab="Prognosen", main="Prognosen (Punkte) + Ergebnis d. Bundestagswahl (Linien)")
usr <- par("usr"); polygon(x=c(rep(usr[1],2),rep(usr[2],2)), y=c(usr[3],5,5,usr[3]), border=NULL, col="gray") # "basement" < 5% hurdle
abline(h=seq(ylimrange[1], ylimrange[2]), col="lightgray", lty=3, lwd=.8) # minor-y-guides
abline(h=seq(0, ylimrange[2], 5), col="lightgray", lty=1, lwd=1.5) # mayjor-y-guides
axis(side=2, at = 5, label = "5", col.axis = "black", las=3, cex.axis = 1, font = 2, lwd=2) # annotate 5% hurdle
box() # redraw to put it on top
parteifarbe <- c(NA, NA, parteifarben)
for (x in 1:nrow(latestpolls))
for (y in 3:8) {
points(x=latestpolls[x,1], y=latestpolls[x,y], pch=19, col=parteifarbe[y])
segments(x0=latestpolls[x,1],
y0=latestpolls[x,y]+schätzfehler[x,y-2],
y1=latestpolls[x,y]-schätzfehler[x,y-2], col=parteifarbe[y], lend=1)
}
abline(h=stimmanteile, col=parteifarben)
parteifarbe <- c(NA, NA, parteifarben)
for (x in 1:nrow(latestpolls))
for (y in 3:8) {
points(x=latestpolls[x,1], y=latestpolls[x,y], pch=19, col=parteifarbe[y])
segments(x0=latestpolls[x,1],
y0=latestpolls[x,y]+schätzfehler[x,y-2],
y1=latestpolls[x,y]-schätzfehler[x,y-2], col=parteifarbe[y], lend=2)
}
for (x in 1:nrow(latestpolls))
for (y in 3:8) {
points(x=latestpolls[x,1], y=latestpolls[x,y], pch=19, col=parteifarbe[y])
segments(x0=latestpolls[x,1],
y0=latestpolls[x,y]+schätzfehler[x,y-2],
y1=latestpolls[x,y]-schätzfehler[x,y-2], col=parteifarbe[y], lend=3)
}
parteifarbe <- c(NA, NA, parteifarben)
for (x in 1:nrow(latestpolls))
for (y in 3:8) {
points(x=latestpolls[x,1], y=latestpolls[x,y], pch=19, col=parteifarbe[y])
arrows(x0=latestpolls[x,1],
y0=latestpolls[x,y]+schätzfehler[x,y-2],
y1=latestpolls[x,y]-schätzfehler[x,y-2], col=parteifarbe[y],
length=1, angle=90)
}
ylimrange <- c(min(as.matrix(latestpolls[,kuerzel]), na.rm=T), max(as.matrix(latestpolls[,kuerzel]), na.rm=T))
plot(cdu~date, data=latestpolls, type="n", ylim=ylimrange, xlab="Zeit", ylab="Prognosen", main="Prognosen (Punkte) + Ergebnis d. Bundestagswahl (Linien)")
usr <- par("usr"); polygon(x=c(rep(usr[1],2),rep(usr[2],2)), y=c(usr[3],5,5,usr[3]), border=NULL, col="gray") # "basement" < 5% hurdle
abline(h=seq(ylimrange[1], ylimrange[2]), col="lightgray", lty=3, lwd=.8) # minor-y-guides
abline(h=seq(0, ylimrange[2], 5), col="lightgray", lty=1, lwd=1.5) # mayjor-y-guides
axis(side=2, at = 5, label = "5", col.axis = "black", las=3, cex.axis = 1, font = 2, lwd=2) # annotate 5% hurdle
box() # redraw to put it on top
parteifarbe <- c(NA, NA, parteifarben)
for (x in 1:nrow(latestpolls))
for (y in 3:8) {
points(x=latestpolls[x,1], y=latestpolls[x,y], pch=19, col=parteifarbe[y])
arrows(x0=latestpolls[x,1],
y0=latestpolls[x,y]+schätzfehler[x,y-2],
y1=latestpolls[x,y]-schätzfehler[x,y-2], col=parteifarbe[y],
length=.1, angle=90)
}
ylimrange <- c(min(as.matrix(latestpolls[,kuerzel]), na.rm=T), max(as.matrix(latestpolls[,kuerzel]), na.rm=T))
plot(cdu~date, data=latestpolls, type="n", ylim=ylimrange, xlab="Zeit", ylab="Prognosen", main="Prognosen (Punkte) + Ergebnis d. Bundestagswahl (Linien)")
usr <- par("usr"); polygon(x=c(rep(usr[1],2),rep(usr[2],2)), y=c(usr[3],5,5,usr[3]), border=NULL, col="gray") # "basement" < 5% hurdle
abline(h=seq(ylimrange[1], ylimrange[2]), col="lightgray", lty=3, lwd=.8) # minor-y-guides
abline(h=seq(0, ylimrange[2], 5), col="lightgray", lty=1, lwd=1.5) # mayjor-y-guides
axis(side=2, at = 5, label = "5", col.axis = "black", las=3, cex.axis = 1, font = 2, lwd=2) # annotate 5% hurdle
box() # redraw to put it on top
parteifarbe <- c(NA, NA, parteifarben)
for (x in 1:nrow(latestpolls))
for (y in 3:8) {
points(x=latestpolls[x,1], y=latestpolls[x,y], pch=19, col=parteifarbe[y])
arrows(x0=latestpolls[x,1],
y0=latestpolls[x,y]+schätzfehler[x,y-2],
y1=latestpolls[x,y]-schätzfehler[x,y-2], col=parteifarbe[y],
length=.05, angle=90)
}
abline(h=stimmanteile, col=parteifarben)
ylimrange <- c(min(as.matrix(latestpolls[,kuerzel]), na.rm=T), max(as.matrix(latestpolls[,kuerzel]), na.rm=T))
plot(cdu~date, data=latestpolls, type="n", ylim=ylimrange, xlab="Zeit", ylab="Prognosen", main="Prognosen (Punkte) + Ergebnis d. Bundestagswahl (Linien)")
usr <- par("usr"); polygon(x=c(rep(usr[1],2),rep(usr[2],2)), y=c(usr[3],5,5,usr[3]), border=NULL, col="gray") # "basement" < 5% hurdle
abline(h=seq(ylimrange[1], ylimrange[2]), col="lightgray", lty=3, lwd=.8) # minor-y-guides
abline(h=seq(0, ylimrange[2], 5), col="lightgray", lty=1, lwd=1.5) # mayjor-y-guides
axis(side=2, at = 5, label = "5", col.axis = "black", las=3, cex.axis = 1, font = 2, lwd=2) # annotate 5% hurdle
box() # redraw to put it on top
parteifarbe <- c(NA, NA, parteifarben)
for (x in 1:nrow(latestpolls))
for (y in 3:8) {
points(x=latestpolls[x,1], y=latestpolls[x,y], pch=19, col=parteifarbe[y])
arrows(x0=latestpolls[x,1],
y0=latestpolls[x,y],
y1=latestpolls[x,y]+schätzfehler[x,y-2], col=parteifarbe[y],
length=.05, angle=90)
arrows(x0=latestpolls[x,1],
y0=latestpolls[x,y],
y1=latestpolls[x,y]-schätzfehler[x,y-2], col=parteifarbe[y],
length=.05, angle=90)
}
abline(h=stimmanteile, col=parteifarben)
37.2*61903000
schätzfehler <- apply(latestpolls, 1, function(x) 1.96*sqrt(x[3:9]/100*(1-x[3:9]/100) / x[10] )*100)
apply(latestpolls, 1, function(x) print(x))
apply(latestpolls, 1, function(x) print(x[2:§]))
apply(latestpolls, 1, function(x) print(x[2:3]))
apply(latestpolls, 21, function(x) print(x[2:3]))
apply(latestpolls, 2, function(x) print(x[2:3]))
apply(latestpolls, 2, function(x) print(x[2]))
apply(latestpolls, 1, function(x) print(x[2]))
apply(latestpolls, 1, function(x) print(x$cdu))
apply(latestpolls, 1, function(x) print(x["cdu"]))
apply(latestpolls, 1, function(x) print(x[3]))
apply(latestpolls, 1, function(x) print(x[3:4]))
schätzfehler <- apply(latestpolls, 1, function(x) 1.96*sqrt(as.numeric(x[3:9])/100*(1-as.numeric(x[3:9]/100)) / as.numeric(x[10]) )*100)
schätzfehler <- apply(latestpolls, 1, function(x) 1.96*sqrt((x[3:9]/100*(1-x[3:9]/100) / x[10] )*100))
schätzfehler <- apply(latestpolls, 1, function(x) 1.96*sqrt(  as.numeric(x[3:9]) /100  *  (1-as.numeric(x[3:9]) /100) / as.numeric(x[10]))*100)
schätzfehler <- apply(latestpolls, 1, function(x) { x[3:10] <- as.numeric(x[3:10]); 1.96*sqrt(  as.numeric(x[3:9])/100*(1-as.numeric(x[3:9]) /100) / as.numeric(x[10])     )*100 } )
schätzfehler <- apply(latestpolls, 1, function(x) { x[3:10] <- as.numeric(x[3:10]); 1.96*sqrt(x[3:9]/100*(1-x[3:9]/100) / x[10]     )*100 } )
schätzfehler <- apply(latestpolls, 1, function(x) {  1.96*sqrt(  as.numeric(x[3:9])/100*(1-as.numeric(x[3:9]) /100) / as.numeric(x[10])     )*100 } )
schätzfehler
schätzfehler <- t(apply(latestpolls, 1, function(x) {  1.96*sqrt(  as.numeric(x[3:9])/100*(1-as.numeric(x[3:9]) /100) / as.numeric(x[10])     )*100 } ))
schätzfehler
schätzfehler <- t(apply(latestpolls, 1, function(x) {  1.96*sqrt(  as.numeric(x[3:9])/100*(1-as.numeric(x[3:9]) /100) / as.numeric(x[10]) * sqrt((waehler-as.numeric(x[10]))/(waehler-1)) )*100 } ))
waehler <- 44289652 # http://www.bundeswahlleiter.de/de/bundestagswahlen/BTW_BUND_13/ergebnisse/bundesergebnisse/index.html
schätzfehler <- t(apply(latestpolls, 1, function(x) {  1.96*sqrt(  as.numeric(x[3:9])/100*(1-as.numeric(x[3:9]) /100) / as.numeric(x[10]) * sqrt((waehler-as.numeric(x[10]))/(waehler-1)) )*100 } ))
schätzfehler
ylimrange <- c(min(as.matrix(latestpolls[,kuerzel]), na.rm=T), max(as.matrix(latestpolls[,kuerzel]), na.rm=T))
plot(cdu~date, data=latestpolls, type="n", ylim=ylimrange, xlab="Zeit", ylab="Prognosen", main="Prognosen (Punkte) + Ergebnis d. Bundestagswahl (Linien)")
usr <- par("usr"); polygon(x=c(rep(usr[1],2),rep(usr[2],2)), y=c(usr[3],5,5,usr[3]), border=NULL, col="gray") # "basement" < 5% hurdle
abline(h=seq(ylimrange[1], ylimrange[2]), col="lightgray", lty=3, lwd=.8) # minor-y-guides
abline(h=seq(0, ylimrange[2], 5), col="lightgray", lty=1, lwd=1.5) # mayjor-y-guides
axis(side=2, at = 5, label = "5", col.axis = "black", las=3, cex.axis = 1, font = 2, lwd=2) # annotate 5% hurdle
box() # redraw to put it on top
parteifarbe <- c(NA, NA, parteifarben)
for (x in 1:nrow(latestpolls))
for (y in 3:8) {
points(x=latestpolls[x,1], y=latestpolls[x,y], pch=19, col=parteifarbe[y])
arrows(x0=latestpolls[x,1],
y0=latestpolls[x,y],
y1=latestpolls[x,y]+schätzfehler[x,y-2], col=parteifarbe[y],
length=.05, angle=90)
arrows(x0=latestpolls[x,1],
y0=latestpolls[x,y],
y1=latestpolls[x,y]-schätzfehler[x,y-2], col=parteifarbe[y],
length=.05, angle=90)
}
abline(h=stimmanteile, col=parteifarben)
source(file.path("fun", "plotPrognosen.r"))
plotPrognosen(latestpolls)
institute <- levels(latestpolls$inst)
institute
institute <- levels(latestpolls$inst)
layout(matrix(c(1,2,3,4,5,6,7), byrow=T, ncol=3, nrow=3))
for (institut in institute)
plotPrognosen(latestpolls[latestpolls$inst==institut,])
matrix(c(1,2,3,4,5,6,7), byrow=T, ncol=3, nrow=3)
matrix(c(1,2,3,4,5,6,7, NA, NA), byrow=T, ncol=3, nrow=3)
layout(matrix(c(1,2,3,4,5,6,7, NA, NA), byrow=T, ncol=3, nrow=3))
for (institut in institute)
plotPrognosen(latestpolls[latestpolls$inst==institut,])
layout(matrix(c(1,2,3,4,5,6,7, 8, 9), byrow=T, ncol=3, nrow=3))
for (institut in institute)
plotPrognosen(latestpolls[latestpolls$inst==institut,])
institute <- levels(latestpolls$inst)
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute)
plotPrognosen(latestpolls[latestpolls$inst==institut,])
source(file.path("fun", "plotPrognosen.r"))
institute <- levels(latestpolls$inst)
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute)
plotPrognosen(latestpolls[latestpolls$inst==institut,], title=institut)
source(file.path("fun", "plotPrognosen.r"))
institute <- levels(latestpolls$inst)
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute)
plotPrognosen(latestpolls[latestpolls$inst==institut,], main=institut)
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute)
plotPrognosen(latestpolls[latestpolls$inst==institut,], main=institut, ylim=c(0,45))
source(file.path("fun", "plotPrognosen.r"))
institute <- levels(latestpolls$inst)
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute)
plotPrognosen(latestpolls[latestpolls$inst==institut,], main=institut)
source(file.path("fun", "plotPrognosen.r"))
institute <- levels(latestpolls$inst)
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute)
plotPrognosen(latestpolls[latestpolls$inst==institut,], main=institut)
source(file.path("fun", "plotPrognosen.r"))
institute <- levels(latestpolls$inst)
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute)
plotPrognosen(latestpolls[latestpolls$inst==institut,], main=institut)
source(file.path("fun", "plotPrognosen.r"))
institute <- levels(latestpolls$inst)
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute)
plotPrognosen(latestpolls[latestpolls$inst==institut,], main=institut)
expression(pi)
source(file.path("fun", "plotPrognosen.r"))
institute <- levels(latestpolls$inst)
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute)
plotPrognosen(latestpolls[latestpolls$inst==institut,], main=expression(x %~~% y))
institute <- levels(latestpolls$inst)
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute)
plotPrognosen(latestpolls[latestpolls$inst==institut,], main=expression(paste0(x %~~% y)))
institute <- levels(latestpolls$inst)
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute)
plotPrognosen(latestpolls[latestpolls$inst==institut,], main=expression(institut (n %~~% n)))
institute <- levels(latestpolls$inst)
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute)
plotPrognosen(latestpolls[latestpolls$inst==institut,], main=expression("institut" (n %~~% n)))
institute <- levels(latestpolls$inst)
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute)
plotPrognosen(latestpolls[latestpolls$inst==institut,], main=expression({institut} (n %~~% n)))
institute <- levels(latestpolls$inst)
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute)
plotPrognosen(latestpolls[latestpolls$inst==institut,], main=expression(plain(institut) (n %~~% n)))
names(latestpolls)
source(file.path("fun", "plotPrognosen.r"))
institute <- levels(latestpolls$inst)
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute) {
pollstoplot <- latestpolls[latestpolls$inst==institut,]
plotPrognosen(pollstoplot, main=paste0(institut, "(n≈", mean(pollstoplot$befragte), ")"))
}
source(file.path("fun", "plotPrognosen.r"))
institute <- levels(latestpolls$inst)
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute) {
pollstoplot <- latestpolls[latestpolls$inst==institut,]
plotPrognosen(pollstoplot, main=paste0(institut, "(n≈", round(mean(pollstoplot$befragte, na.rm=T)), ")"))
}
source(file.path("fun", "plotPrognosen.r"))
institute <- levels(latestpolls$inst)
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute) {
pollstoplot <- latestpolls[latestpolls$inst==institut,]
plotPrognosen(pollstoplot, main=paste0(institut, " (n ≈ ", round(mean(pollstoplot$befragte, na.rm=T)), ")"))
}
institute <- levels(latestpolls$inst)
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute) {
pollstoplot <- latestpolls[latestpolls$inst==institut,]
plotPrognosen(pollstoplot, main=paste0(institut, " (n ~ ", round(mean(pollstoplot$befragte, na.rm=T)), ")"))
}
source(file.path("fun", "plotPrognosen.r"))
institute <- levels(latestpolls$inst)
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute) {
pollstoplot <- latestpolls[latestpolls$inst==institut,]
plotPrognosen(pollstoplot, main=paste0(institut, " (n ~ ", round(mean(pollstoplot$befragte, na.rm=T)), ")"))
}
source(file.path("fun", "plotPrognosen.r"))
institute <- levels(latestpolls$inst)
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute) {
pollstoplot <- latestpolls[latestpolls$inst==institut,]
plotPrognosen(pollstoplot, main=paste0(institut, " (n ~ ", round(mean(pollstoplot$befragte, na.rm=T)), ")"))
}
windows(1920/90, 1080/90, title="Ohne CIs")
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute) {
pollstoplot <- latestpolls[latestpolls$inst==institut,]
plotPrognosen(pollstoplot, plotCI=F, main=paste0(institut, " (n ~ ", round(mean(pollstoplot$befragte, na.rm=T)), ")"))
}
windows(1920/90, 1080/90, title="Ohne CIs")
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute) {
pollstoplot <- latestpolls[latestpolls$inst==institut,]
plotPrognosen(pollstoplot, main=paste0(institut, " (n ~ ", round(mean(pollstoplot$befragte, na.rm=T)), ")"))
}
windows(1920/90, 1080/90, title="Ohne CIs")
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute) {
pollstoplot <- latestpolls[latestpolls$inst==institut,]
plotPrognosen(pollstoplot, drawCI=F, main=paste0(institut, " (n ~ ", round(mean(pollstoplot$befragte, na.rm=T)), ")"))
}
windows(1920/90, 1080/90, title="Ohne CIs")
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute) {
pollstoplot <- latestpolls[latestpolls$inst==institut,]
plotPrognosen(pollstoplot, main=paste0(institut, " (n ~ ", round(mean(pollstoplot$befragte, na.rm=T)), ")"))
}
legend()
for (institut in institute) {
pollstoplot <- latestpolls[latestpolls$inst==institut,]
plotPrognosen(pollstoplot, main=paste0(institut, " (n ~ ", round(mean(pollstoplot$befragte, na.rm=T)), ")"))
}
legend()
windows(1920/90, 1080/90, title="Ohne CIs")
layout(matrix(c(1,2,3,4,
5,6,7,8), byrow=T, ncol=4, nrow=2))
for (institut in institute) {
pollstoplot <- latestpolls[latestpolls$inst==institut,]
plotPrognosen(pollstoplot, main=paste0(institut, " (n ~ ", round(mean(pollstoplot$befragte, na.rm=T)), ")"))
}
legend()
